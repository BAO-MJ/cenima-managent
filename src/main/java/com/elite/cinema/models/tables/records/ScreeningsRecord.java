/*
 * This file is generated by jOOQ.
 */
package com.elite.cinema.models.tables.records;


import com.elite.cinema.models.tables.Screenings;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ScreeningsRecord extends UpdatableRecordImpl<ScreeningsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cinema.screenings.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>cinema.screenings.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>cinema.screenings.movie_id</code>.
     */
    public void setMovieId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>cinema.screenings.movie_id</code>.
     */
    public ULong getMovieId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>cinema.screenings.room_id</code>.
     */
    public void setRoomId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>cinema.screenings.room_id</code>.
     */
    public ULong getRoomId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>cinema.screenings.screening_time</code>.
     */
    public void setScreeningTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>cinema.screenings.screening_time</code>.
     */
    public LocalDateTime getScreeningTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScreeningsRecord
     */
    public ScreeningsRecord() {
        super(Screenings.SCREENINGS);
    }

    /**
     * Create a detached, initialised ScreeningsRecord
     */
    public ScreeningsRecord(ULong id, ULong movieId, ULong roomId, LocalDateTime screeningTime) {
        super(Screenings.SCREENINGS);

        setId(id);
        setMovieId(movieId);
        setRoomId(roomId);
        setScreeningTime(screeningTime);
        resetTouchedOnNotNull();
    }
}
